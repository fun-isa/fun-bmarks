{-
//// fun benchmark apps
//// Braun
//// AUTHOR: cecaccetti at sjtu edu cn
//// (C)2022 SHANGHAI JIAOTONG UNIVERSITY 
-}


data Bool =   False | True ;
data Tree = Branch x b0 b1 | Empty ;
data List =  Cons x y | Nil ;

ands a b = case a of {
          | 1 -> b
          | 2 -> False
          };  
          
          
insert x t = case t of {
             | 1 -> Branch x Empty Empty
             | 2 -> \y t0 t1 -> Branch x (insert y t1) t0
             };  
             
size t = t 0 (\x t0 t1 -> + 1 (+ (size t0) (size t1)));

fromList ls = ls (Empty) (\x xs -> insert x (fromList xs));

toList t = t Nil (\x t0 t1 -> Cons x (ilv (toList t0) (toList t1)));

ilv ls lz = ls (lz) ( \x xs -> lz (Cons x xs) (\y ys -> Cons x (Cons y (ilv xs ys)) ) );

replicate n x = (== 0 n) Nil (Cons x (replicate (- n 1) x ));

fromTo n m = (< m n)  (Nil) (Cons n (fromTo (+ 1 n) m ));

repeat x = Cons x (repeat x);

equal ls lz = ls (lz (True) (\y ys -> False)) (\x xs -> lz (False) (\y ys -> (== x y) (equal xs ys) False));

prop xs = equal xs (toList (fromList xs));

all p ls = ls True (\x xs -> ands (p x) (all p xs) );


int b = b 1 0;

putc x = out (extern 0x1000beef) x;

printString str c = str (putc 10 (putc 13 c) ) (\h t -> putc h (printString t c)); 

showBool b = b ("True") ("False");


main = printString  (showBool(all prop (replicate 6000 (fromTo 0 255))))True;


