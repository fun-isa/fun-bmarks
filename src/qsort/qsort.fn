{-
//// fun benchmark apps
//// quickSort
//// AUTHOR: cecaccetti at sjtu edu cn
//// (C)2022 SHANGHAI JIAOTONG UNIVERSITY 
-}



-- l1 = [ 1853, 195, 589, 1548, 611, 888, 1089, 446, 188, 1630, 271, 84, 112, 1328, 1854, 204, 886, 1940, 1917, 276, 1045, 1819, 1825, 158, 198, 562, 310, 929, 92, 1735, 1505, 159, 1883, 125, 1134, 1626, 911, 1383, 1539, 621, 1035, 724, 1341, 985, 24, 1121, 1058, 64, 1468, 1435, 686, 1741, 698, 1214, 976, 1818, 609, 471, 1831, 377, 1302, 63, 1997, 1936, 1092, 227, 1130, 12, 1378, 850, 308, 194, 665, 212, 1724, 47, 1946, 408, 1021, 1709, 1048, 108, 1201, 1112, 262, 1319, 960, 1251, 142, 473, 1982, 504, 23, 1651, 1861, 1542, 185, 865, 996, 1995, 317, 592, 1949, 833, 1032, 1384, 1442, 1856, 801, 1591, 374, 1985, 1559, 1339, 1582, 695, 1623, 800, 1654, 717, 327, 827, 1986, 220, 1005, 154, 287, 997, 1853, 195, 589, 1548, 611, 888, 1089, 446, 188, 1630, 271, 84, 112, 1328, 1854, 204, 886, 1940, 1917, 276, 1045, 1819, 1825, 158, 198, 562, 310, 929, 92, 1735, 1505, 159, 1883, 125, 1134, 1626, 911, 1383, 1539, 621, 1035, 724, 1341, 985, 24, 1121, 1058, 64, 1468, 1435, 686, 1741, 698, 1214, 976, 1818, 609, 471, 1831, 377, 1302, 63, 1997, 1936, 1092, 227, 1130, 12, 1378, 850, 308, 194, 665, 212, 1724, 47, 1946, 408, 1021, 1709, 1048, 108, 1201, 1112, 262, 1319, 960, 1251, 142, 473, 1982, 504, 23, 1651, 1861, 1542, 185, 865, 996, 1995, 317, 592, 1949, 833, 1032, 1384, 1442, 1856, 801, 1591, 374, 1985, 1559, 1339, 1582, 695, 1623, 800, 1654, 717, 327, 827, 1986, 220, 1005, 154, 287, 997 ];

l1 = [ 100,99,98,97,96,96,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1 ];

data Bool =   False | True ;
data List =  Cons x y | Nil ;

data Pair = Pair a b;

not x = x False True;

printlist xs = xs (True) (\h t -> put h (printlist t)); 

compose f g x = f(g x);

put x = out (extern 0x10a1fafa) x;

filter cond xs = xs Nil (\h t -> (\f -> (cond h) (Cons h  f) f) (filter cond t) ); 

partition p =  foldr (select p) (Pair Nil Nil);

select p x ps = ps (\ts fs -> p x (Pair (Cons x ts) fs) (Pair ts (Cons x fs)));

foldr f z ls = ls (z) (\h t -> f h (foldr f z t));

concat xs ys = foldr (Cons) ys xs;

fst x = x (\h t -> h);
snd x = x (\h t -> t);

quickSort xs = xs Nil (\h t -> (partition (\x -> < x h) t) (\p s -> concat (quickSort (p )) (Cons h (quickSort (s )))) ); 

main = printlist (quickSort l1);



