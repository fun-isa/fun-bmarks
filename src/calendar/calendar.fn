{-
//// fun benchmark apps
//// calendar
//// AUTHOR: cecaccetti at sjtu edu cn
//// (C)2022 SHANGHAI JIAOTONG UNIVERSITY 
-}


data Bool =   False | True ;
data List =  Cons x y | Nil ;
data Pair = Pair a b;
data Trio = Trio a b c;
data Quad = Quad a b c d;


show d = "ShowShow";

not b = b False True;

isDigit x = (> x '0') ((< x '9') True False) False;

repeat x = Cons x (repeat x);

head ls = ls (False) (\h t -> h);

null ls = ls (True) (\h t -> False);

put x = out (extern 0x10a1fafa) x;
putc x =  x (out (extern 0x1000beef));

prints s z = s (putc 10 (putc 13 z)) (\h t -> putc h (prints t z)); 

compose f g x = f(g x); 

foldr f z ls = ls (z) (\h t -> f h (foldr f z t));

unlines lss = lss Nil (\xs xss -> (foldr Cons (Cons 10 (Cons 13 ( (unlines xss)))) xs));

span p =  foldr (select p) (Pair Nil Nil);

select p x ps = ps (\ts fs -> p x (Pair (Cons x ts) fs) (Pair ts (Cons x fs)));

foldr1 f ls = ls (Nil) (\x xs -> xs x (\h t -> f x (foldr1 f xs))); 

foldl f z xs = xs z (\h t -> foldl f (f z h) t);

append xs ys = xs ys (\h t -> Cons h (append t ys));

map f ls = ls (Nil) (\h t -> Cons (f h) (map f t));

ors y x = y True x;

length ls = ls 0 (\h t -> + 1 (length t));

scanl f z xs = xs (Cons z Nil) (\h t -> (Cons z (scanl f (f z h) t)));

take n xs = xs (Nil) (\h t -> (== 0 n) Nil (Cons h (take (- n 1) t))  );

drop n xs = xs Nil (\h t -> (== 0 n) xs (drop (- n 1) t));

zip3 xs1 xs2 xs3 = xs1 (Nil) (\h t -> xs2 (Nil) (\h2 t2 -> xs3 (Nil) ( \h3 t3 ->  Cons (Trio h h2 h3) (zip3 t t2 t3))));

zipWith f xs1 xs2 = xs1 (Nil) (\h t -> xs2 (Nil) (\h2 t2 -> Cons (f h h2) (zipWith f t t2)));

zip4 xs1 xs2 xs3 xs4 = xs1 (Nil) (\h t -> xs2 (Nil) (\h2 t2 -> xs3 (Nil) ( \h3 t3 -> xs4 Nil (\h4 t4 -> Cons (Quad h h2 h3 h4) (zip4 t t2 t3 t4)))));

range n m = (< n m) Nil (Cons n ( range (- n  1) m ));

height p = length p;
width  p = length (head p);

above = append;
beside = zipWith append;

stack = foldr1 above;
spread = foldr1 beside;

emptyPic ps = ps (\h w -> copy h (copy w ' '));

block n  = compose stack (compose (map spread) (groop n));
blockT n = compose spread (compose (map stack) (groop n));

groop n ls = ls (Nil) (\h t -> 
                Cons (take n ls) 
                     (groop n (drop n ls)));
                     
lframe ps p = (\h w -> ps (\m n -> 
              above (beside p (emptyPic (Pair h (- n w)))) 
                    (emptyPic (Pair (- m h) (n)))))
              (height p)
              (width p);      

monthLengths year = (\feb -> 
                    ([ 31,feb,31,30,31,30,31,31,30,31,30,31 ]))
                    ((leap year) 29 28);

leap year = (== 0 (% year 100))
                ((== 0 (% year 400)) True False)
                ((== 0 (% year 4)) True False); 

monthNames = [ "January","February","March","April",
	       "May","June","July","August",
               "September","October","November","December" ];

jan1st year = (\last ->  % ( + (- (+ year (/ last 4)) (/ last 100)) (/ last 400))  7 ) (- year 1);

firstDays year = take 12 
                    (map (\x -> % x 7)
                         (scanl (+) (jan1st year) (monthLengths year)));
                         
dates fd ml = map (date ml) (range (- 1 fd) (- 42 fd));

date ml d = (ors (< d 1 True False) (< ml d True False) )
                (Cons ("   ") Nil)
                (Cons (rjustify 3 (show d)) Nil);

calendar = compose unlines (compose (block 3) (compose (map picture) (months)));

picture qd = qd (\mn yr fd ml -> above (title mn yr) (table fd ml) );

title mn yr = lframe (Pair 2 25) (Cons (append (append mn " ") (show yr)) Nil);

table fd ml = lframe (Pair 8 25) (beside (daynames)(entries fd ml));

daynames = [ "Sun","Mon","Tue","Wed","Thu","Fri","Sat" ];

entries fd ml = blockT 7 (dates fd ml);

months year = zip4 monthNames
                   (copy 12 year)
                   (firstDays year)
                   (monthLengths year);
                   
cal year = unlines (above (banner year) (body year));

banner yr = above (Cons (cjustify 75 ( yr)) Nil) (emptyPic (Pair 1 75));

body = compose (block 3) (compose (map (compose pad pic)) (months2));

pic ts = ts (\mn fd ml -> above (title2 mn) (table2 fd ml));

pad p = above (beside (beside side p) side) end;

side = emptyPic (Pair 8 2);

end = emptyPic (Pair 1 25);

title2 mn = Cons (cjustify 21 mn) Nil;

table2 fd ml = above daynames2 (entries2 fd ml);

daynames2 =  [ " Su Mo Tu We Th Fr Sa" ] ;
                   
entries2 fd ml = block 7 (dates fd ml);

months2 year = zip3 monthNames
                   (firstDays year)
                   (monthLengths year);

copy n x = take n (repeat x);

-----------------------------------------------
cjustify n s = (\m -> (\halfm ->  append (space halfm) 
                      (append (s) 
                              (space (- m halfm)))
               ) (/ m 2) )(- n (length s))
                ;

ljustify n s = append (s) 
                      (space (- n (length s)));

rjustify n s = append (space (- n (length s)))
                      (s);

space n = copy n 32;
-----------------------------------------------

calFor year = (length (cal year));

atoi s = foldl (\a d -> + (* 10 a)d) 0 (map toDigit s);

toDigit d = - d '0';

-----------------------------------------------------
printlist xs z = xs (z) (\h t -> put h (printlist t z));  

printll lss = lss True (\xs xss -> printlist xs (printll xss ));  

                
main = 

put (length (calendar  2022))  True;
 






